{"version":3,"sources":["slider.js","BeraknaBitar.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","root","width","RenderRekResultat","höjd","bredd","längd","RenderRundResultat","radie","BeräknaBitar","props","beräknaRek","defaultProps","App","useState","form","setForm","bitar","setBitar","hojd","setHojd","setBredd","langd","setLangd","setRadie","metod","setMetod","visaResultat","setvisaResultat","RenderResultat","className","Grid","container","spacing","item","xs","align","FormControl","component","FormHelperText","RadioGroup","row","defaultValue","onChange","e","target","value","FormControlLabel","control","Radio","color","label","labelPlacement","TextField","lable","placeholder","variant","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e568857.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  function valuetext(value) {\r\n    props.callback(value)\r\n  return `${value}`;\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n        Höjd\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={20}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={5}\r\n        max={35}\r\n      />\r\n    </div>\r\n  );\r\n}","\r\nfunction RenderRekResultat ({höjd, bredd, längd }) {\r\n    return(\r\n        <div>\r\n            <h2>Små Bitar: {höjd * bredd * längd / 175} </h2>\r\n            <h2>Mellan Bitar: {höjd * bredd * längd / 200} </h2>\r\n            <h2>Stora Bitar: {höjd * bredd * längd / 225} </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderRundResultat({  höjd, radie }) {\r\n    return(\r\n        <div>\r\n            <h2>Små Bitar: {höjd * radie * radie * 3.141592 / 175} </h2>\r\n            <h2>Mellan Bitar: {höjd * radie * radie * 3.141592 / 200} </h2>\r\n            <h2>Stora Bitar: {höjd * radie * radie * 3.141592 / 225} </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction BeräknaBitar (props){\r\n    return(\r\n        <div>\r\n            {props.beräknaRek ? \r\n            <RenderRekResultat \r\n                höjd={props.höjd} \r\n                bredd={props.bredd} \r\n                längd={props.längd} \r\n            /> : \r\n            <RenderRundResultat \r\n                höjd={props.höjd} \r\n                radie={props.radie} \r\n            />}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nBeräknaBitar.defaultProps = {\r\n    höjd: 0,\r\n    bredd: 0,\r\n    längd: 0 ,\r\n    radie: 0,\r\n    beräknaRek: true,\r\n}\r\n\r\nexport default BeräknaBitar;","import './App.css';\nimport React, { Component } from \"react\";\nimport { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport DiscreteSlider from \"./slider\";\nimport BeräknaBitar from \"./BeraknaBitar\"\n\nfunction App() {\n\n  const [form, setForm] = useState(\"\");\n  const [bitar, setBitar] = useState(0);\n  const [hojd, setHojd] = useState(0);\n  const [bredd, setBredd] = useState(0);\n  const [langd, setLangd] = useState(0);\n  const [radie, setRadie] = useState(0);\n  const [metod, setMetod] = useState(\"storlek\");\n  const [höjdslider, setHöjdslider] = useState(0)\n  const [visaResultat, setvisaResultat] = useState(false)\n\n\n\n  function RenderInputStorlekRek () {\n    return(\n      <div>\n        <h3>Höjden</h3>\n        <Grid item xs={12} align=\"center\">\n          \n          <TextField \n            lable=\"Höjd\"\n            placeholder=\"Höjden\"\n            value={hojd}\n            variant=\"outlined\"\n            onChange={(e) => {setHojd(e.target.value)}}\n          />\n        </Grid>\n        <h3>Bredden</h3>\n        <Grid item xs={12} align=\"center\">\n          <TextField \n            lable=\"Bredd\"\n            placeholder=\"Bredd\"\n            value={bredd}\n            variant=\"outlined\"\n            onChange={(e) => {setBredd(e.target.value)}}\n          />\n        </Grid>\n        <h3>Längden</h3>\n        <Grid item xs={12} align=\"center\">\n          <TextField \n            lable=\"Längd\"\n            placeholder=\"Längd\"\n            value={langd}\n            variant=\"outlined\"\n            onChange={(e) => {setLangd(e.target.value)}}\n          />\n        </Grid>\n      </div>\n    )\n  }\n\n  function RenderInputStorlekRund () {\n    return(\n      <div>\n        <h3>Höjden</h3>\n        <Grid item xs={12} align=\"center\">\n          \n          <TextField \n            lable=\"Höjd\"\n            placeholder=\"Höjden\"\n            value={hojd}\n            variant=\"outlined\"\n            onChange={(e) => {setHojd(e.target.value)}}\n          />\n        </Grid>\n        <h3>Radien</h3>\n        <Grid item xs={12} align=\"center\">\n          <TextField \n            lable=\"Radie\"\n            placeholder=\"Radie\"\n            value={radie}\n            variant=\"outlined\"\n            onChange={(e) => {setRadie(e.target.value)}}\n          />\n        </Grid>\n\n      </div>\n    )\n  }\n\n\n  function RenderResultat() {\n    return(\n      <BeräknaBitar höjd={hojd} bredd={bredd} längd={langd} radie={radie} beräknaRek={form === \"Rektangular\" ? true : false } />\n    )\n  }\n\n\n  function RenderRundEllerRektangel () {\n    return(\n      <div>\n        {form === \"Rund\" ? RenderInputStorlekRund() : RenderInputStorlekRek()}\n      </div>\n      \n    )\n\n  }\n\n  function RenderInputBitar () {\n    return(\n      <div>\n        <Grid item xs={12} align=\"center\">\n          <TextField \n            lable=\"Bitar\"\n            placeholder=\"Antalet Bitar\"\n            value={bitar}\n            variant=\"outlined\"\n            onChange={(e) => {setBitar(e.target.value)}}\n          />\n        </Grid>\n      </div>\n    )\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={1}>\n        <Grid item xs={12} align=\"center\">\n          <FormControl component=\"fieldset\">\n            <FormHelperText component='div'>\n              <div align=\"center\">Form på tårtan</div>\n            </FormHelperText>\n            <RadioGroup row defaultValue=\"true\" onChange={(e) => {e.target.value === \"true\" ? setForm(\"Rektangular\") : setForm(\"Rund\")}}>\n              <FormControlLabel value=\"true\" control ={<Radio color=\"primary\" />} label=\"Rektangulär\" labelPlacement=\"bottom\">\n\n              </FormControlLabel>\n              <FormControlLabel value=\"false\" control ={<Radio color=\"secondary\" />} label=\"Rund\" labelPlacement=\"bottom\">\n\n              </FormControlLabel>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <FormControl component=\"fieldset\">\n            <FormHelperText component='div'>\n              <div align=\"center\">Beräkna utifrån storlek eller bitar</div>\n            </FormHelperText>\n            <RadioGroup row defaultValue=\"true\" onChange={(e) => {e.target.value === \"true\" ? setMetod(\"storlek\") : setMetod(\"Bitar\")}}>\n              <FormControlLabel value=\"true\" control ={<Radio color=\"primary\" />} label=\"storlek\" labelPlacement=\"bottom\">\n\n              </FormControlLabel>\n              <FormControlLabel value=\"false\" control ={<Radio color=\"secondary\" />} label=\"Bitar\" labelPlacement=\"bottom\">\n\n              </FormControlLabel>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} align=\"center\" >\n          {metod === \"Bitar\" ? RenderInputBitar() : false }\n          {metod === \"storlek\" ? RenderRundEllerRektangel () : false}\n        </Grid>\n        <Grid item xs={12} align=\"center\" >\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => {setvisaResultat(true)}}>\n              Beräkna Storleken\n            </Button>\n        </Grid>\n        <Grid item xs={12} align=\"center\" >\n          {visaResultat && metod === \"storlek\" ? <RenderResultat /> : null} \n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}